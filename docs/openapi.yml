openapi: 3.0.2
info:
  title: Family Tree API
  description: API for managing a family tree
  version: 1.0.0
servers:
- url: http://localhost:5001
  description: Local development server
paths:
  /familytree/person:
    get:
      tags:
        - "person"
      summary: List people in family tree
      operationId: ListPeople
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      tags:
        - "person"
      summary: Create a new person in family tree
      operationId: CreatePerson
      requestBody:
        description: Person object that needs to be added to the family tree
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
  /familytree/person/{id}:
    get:
      tags:
        - "person"
      summary: Build family tree for a specific person
      operationId: BuildFamilyTree
      parameters:
      - name: id
        in: path
        description: ID of the person to build family tree for
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
    patch:
      tags:
        - "person"
      summary: Update a person in family tree
      operationId: UpdatePerson
      requestBody:
        description: Person object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - "person"
      summary: Delete a person from family tree
      operationId: DeletePerson
      parameters:
      - name: id
        in: path
        description: ID of the person to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
  /familytree/relationship:
    post:
      tags:
        - "relationship"
      summary: Create a new relationship in family tree
      operationId: CreateRelationship
      requestBody:
        description: Relationship object that needs to be added to the family tree
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relationship'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
  /familytree/relationship/{id}:
    put:
      tags:
        - "relationship"
      summary: Update a relationship in family tree
      operationId: UpdateRelationship
      requestBody:
        description: Relationship object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relationship'
      responses:
        '204':
          description: No content
    delete:
      tags:
        - "relationship"
      summary: Delete a relationship from family tree
      operationId: DeleteRelationship
      parameters:
      - name: id
        in: path
        description: ID of the relationship to delete
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No content
components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the person
        name:
          type: string
          description: Name of the person
        createdAt:
          type: string
          format: date-time
          description: Date and time when the person was created
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the person was last updated
        deletedAt:
          type: string
          format: date-time
          description: Date and time when the person was last updated
      required:
        - name
    Relationship:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the relationship
        parent_id:
          type: string
          format: uuid
          description: Unique identifier for the child
        child_id:
          type: string
          format: uuid
          description: Unique identifier for the parent
        createdAt:
          type: string
          format: date-time
          description: Date and time when the relationship was created
        updatedAt:
          type: string
          format: date-time
          description: Date and time when the relationship was last updated
        deletedAt:
          type: string
          format: date-time
          description: Date and time when the relationship was last updated
      required:
        - parent_id
        - child_id
    Member:
      type: object
      properties:
        name:
          type: string
        relationships:
          type: array
          items:
            $ref: "#/components/schemas/MemberRelationship"
    MemberRelationship:
      type: object
      properties:
        name:
          type: string
        relationship:
          type: string
      required:
        - name
        - relationship


